---
- name: Create directories
  file:
    path: "{{ authelia.folder }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0775

- name: "Check if authelia users database exists"
  stat:
    path: "{{ authelia.folder }}/users_database.yml"
  register: authelia_users_database

- name: "Create authelia users database file"
  template:
    src: users_database.yml.j2
    dest: "{{ authelia.folder }}/users_database.yml"
    force: yes
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0775
  when: not authelia_users_database.stat.exists

- name: "Create authelia config file"
  template:
    src: configuration.yml.j2
    dest: "{{ authelia.folder }}/configuration.yml"
    force: yes
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0775

- name: Create and start container
  docker_container:
    name: authelia
    image: "authelia/authelia"
    pull: yes
    recreate: true
    volumes:
      - "{{ authelia.folder }}:/config"
    networks:
      - name: web
        aliases:
          - authelia
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
    labels:
      traefik.enable: "true"
      traefik.docker.network: "web"
      traefik.http.routers.authelia.rule: "Host(`{{ authelia.subdomain }}.{{ domain }}`)"
      traefik.http.routers.authelia.entrypoints: "websecure"
      traefik.http.services.authelia.loadbalancer.server.port: "9091"

      traefik.http.middlewares.authelia.forwardauth.address: "http://authelia:9091/api/verify?rd=https://{{ authelia.subdomain }}.{{ domain }}/"
      traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: "true"
      traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: "Remote-User, Remote-Groups, Remote-Name, Remote-Email"
      traefik.http.middlewares.authelia-basic.forwardauth.address: "http://authelia:9091/api/verify?auth=basic"
      traefik.http.middlewares.authelia-basic.forwardauth.trustForwardHeader: "true"
      traefik.http.middlewares.authelia-basic.forwardauth.authResponseHeaders: "Remote-User, Remote-Groups, Remote-Name, Remote-Email"
    env:
      TZ: "{{ tz }}"