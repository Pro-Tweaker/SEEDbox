---
- name: Create directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user }} group={{ group }} recurse=yes"
  with_items:
    - "{{ homer.folder }}"
    - "{{ homer.folder }}/discovery"

- name: Create and start Homer container
  docker_container:
    name: homer
    image: "b4bz/homer"
    pull: yes
    recreate: true
    volumes:
      - "{{ homer.folder }}:/www/assets"
    networks:
      - name: web
        aliases:
          - homer
    restart_policy: unless-stopped
    state: started
    labels:
      traefik.enable: "true"
      traefik.docker.network: "web"
      traefik.http.routers.homer.rule: "Host(`{{ domain }}`)"
      traefik.http.routers.homer.entrypoints: "websecure"
      traefik.http.services.homer.loadbalancer.server.port: "8080"
      traefik.http.routers.homer.middlewares: "authelia-basic@docker"
    env:
      INIT_ASSETS: 0
      TZ: "{{ tz }}"
    user: "{{ uid | int }}:{{ gid | int }}"

- name: Homer Settings Tasks
  include_tasks: "settings/main.yml"

- name: Create the management network
  docker_network:
    name: management

- name: Create and start Homer Service Discovery container
  docker_container:
    name: homer-discovery
    image: "ghcr.io/calvinbui/homer-service-discovery:latest"
    pull: yes
    recreate: true
    volumes:
      - "{{ homer.folder }}/config.yml:/config.yml"
      - "{{ homer.folder }}/discovery/base.yml:/base.yml"
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - name: management
        aliases:
          - homer-discovery
    restart_policy: unless-stopped
    state: started
    env:
      LOG_LEVEL: Debug
      HOMER_CONFIG: /config.yml
      HOMER_BASE_CONFIG: /base.yml
