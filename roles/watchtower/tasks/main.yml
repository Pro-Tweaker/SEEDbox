---
- name: Stop and remove any existing container
  docker_container:
    name: watchtower
    state: absent

- name: Create and start container
  docker_container:
    name: watchtower
    image: "containrrr/watchtower"
    pull: yes
    recreate: true
    networks:
      - name: postfix
        aliases:
          - watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    restart_policy: unless-stopped
    state: started
    env:
      TZ: "{{ tz }}"
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_NO_STARTUP_MESSAGE: "true"
      # Update containers every day at 5:00 a.m.
      WATCHTOWER_SCHEDULE: "0 0 5 * * *"
      WATCHTOWER_NOTIFICATIONS: "email"
      WATCHTOWER_NOTIFICATION_EMAIL_TO: "{{ watchtower.notification_email_to }}"
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: "{{ watchtower.notification_email_from }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: "{{ watchtower.notification_email_server }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: "{{ watchtower.notification_email_server_port }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: "{{ watchtower.notification_email_server_user }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: "{{ watchtower.notification_email_server_password }}"
      WATCHTOWER_NOTIFICATION_EMAIL_DELAY: "{{ watchtower.notification_email_delay }}"